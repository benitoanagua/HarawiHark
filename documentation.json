{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-d4821beac0e4a852e513391b7470981c4353fdd95a18628bb68136c8695b489ee15b926e2e5031bc26cf30e1508e0a362c3ee13a06734702b4d15af140e485d5",
            "file": "src/stories/user.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {\n  name: string;\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 2
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": []
        },
        {
            "name": "User",
            "id": "interface-User-6d45cc53cb9575d30305eb575381b55d50701d053e6e7f1e5e43b1f0163f96f410de7b345aa8573a726a2feff7523860bc3d04becbb75c313aa9f1271f4ad6ff-1",
            "file": "src/app/components/header/header.component.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent } from '../button/button.component';\n\nexport interface User {\n  name: string;\n}\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input() user: User | null = null;\n  @Input() theme: 'light' | 'dark' = 'light';\n  @Output() login = new EventEmitter<Event>();\n  @Output() logout = new EventEmitter<Event>();\n  @Output() createAccount = new EventEmitter<Event>();\n}\n",
            "properties": [
                {
                    "name": "name",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 6
                }
            ],
            "indexSignatures": [],
            "kind": 172,
            "methods": [],
            "extends": [],
            "isDuplicate": true,
            "duplicateId": 1,
            "duplicateName": "User-1"
        }
    ],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "App",
            "id": "component-App-44463de71fd6c20d95f539178c7797035e7571111da41e6ebf0bc6ee79a748bd5688d65e90e63b631d1cdd6d7b092f2ba1a30458ba9394a8d6c8dfc2dab581ea",
            "file": "src/app/app.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "tiles",
                    "defaultValue": "signal([\n    { title: 'Calendar', icon: 'iconoir--calendar', color: 'bg-primary', link: '#' },\n    { title: 'Mail', icon: 'iconoir--mail', color: 'bg-error', link: '#' },\n    { title: 'Photos', icon: 'iconoir--camera', color: 'bg-primary-container', link: '#' },\n    { title: 'Store', icon: 'iconoir--shop', color: 'bg-surface-variant', link: '#' },\n  ])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 14,
                    "modifierKind": [
                        124,
                        148
                    ]
                },
                {
                    "name": "title",
                    "defaultValue": "signal('Metro UI App')",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 11,
                    "modifierKind": [
                        124,
                        148
                    ]
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": false,
            "imports": [
                {
                    "name": "RouterOutlet"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, signal } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  imports: [RouterOutlet],\n  templateUrl: './app.html',\n  styleUrl: './app.css',\n})\nexport class App {\n  protected readonly title = signal('Metro UI App');\n\n  // Datos de ejemplo para tiles\n  protected readonly tiles = signal([\n    { title: 'Calendar', icon: 'iconoir--calendar', color: 'bg-primary', link: '#' },\n    { title: 'Mail', icon: 'iconoir--mail', color: 'bg-error', link: '#' },\n    { title: 'Photos', icon: 'iconoir--camera', color: 'bg-primary-container', link: '#' },\n    { title: 'Store', icon: 'iconoir--shop', color: 'bg-surface-variant', link: '#' },\n  ]);\n}\n",
            "styleUrl": "./app.css",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<main class=\"min-h-screen bg-background text-on-background font-sans metro-entrance\">\n  <!-- Header Metro UI -->\n  <header class=\"bg-surface text-on-surface px-4 py-3 border-b border-outline\">\n    <div class=\"flex items-center justify-between max-w-6xl mx-auto\">\n      <div class=\"flex items-center gap-3\">\n        <span class=\"icon-[iconoir--windows] text-2xl text-primary\"></span>\n        <h1 class=\"text-xl font-semibold\">{{ title() }}</h1>\n      </div>\n      \n      <div class=\"flex items-center gap-2\">\n        <button class=\"p-2 rounded-sm hover:bg-surface-variant transition-colors\">\n          <span class=\"icon-[iconoir--search] text-lg\"></span>\n        </button>\n        <button class=\"p-2 rounded-sm hover:bg-surface-variant transition-colors\">\n          <span class=\"icon-[iconoir--user] text-lg\"></span>\n        </button>\n      </div>\n    </div>\n  </header>\n\n  <!-- Content Area -->\n  <div class=\"max-w-6xl mx-auto p-4\">\n    <!-- Grid de Tiles estilo Metro -->\n    <div class=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-3 mb-8\">\n      @for (tile of tiles(); track tile.title) {\n        <a \n          [href]=\"tile.link\"\n          class=\"metro-tile {{tile.color}} text-on-surface rounded-sm p-4 flex flex-col items-center justify-center text-center shadow-sm hover:shadow-md transition-all\"\n        >\n          <span class=\"icon-[{{tile.icon}}] text-3xl mb-2\"></span>\n          <span class=\"text-sm font-medium\">{{ tile.title }}</span>\n        </a>\n      }\n    </div>\n\n    <!-- Pivot/Hub Navigation -->\n    <div class=\"metro-pivot flex overflow-x-auto gap-1 pb-4 mb-6 -mx-4 px-4\">\n      @for (section of ['Home', 'Apps', 'Games', 'Music', 'Videos']; track section) {\n        <button \n          class=\"metro-pivot-item px-4 py-2 rounded-sm whitespace-nowrap bg-surface-variant text-on-surface-variant hover:bg-primary hover:text-on-primary transition-colors\"\n        >\n          {{ section }}\n        </button>\n      }\n    </div>\n\n    <!-- Content List -->\n    <div class=\"space-y-2\">\n      @for (item of [\n        { title: 'Explore Documentation', icon: 'iconoir--book-stack', description: 'Learn about Angular features' },\n        { title: 'Tutorials', icon: 'iconoir--graduation-cap', description: 'Step-by-step learning guides' },\n        { title: 'AI Development', icon: 'iconoir--robot', description: 'Build with AI assistance' },\n        { title: 'CLI Tools', icon: 'iconoir--terminal', description: 'Command line interface docs' }\n      ]; track item.title) {\n        <div class=\"bg-surface text-on-surface p-3 rounded-sm border border-outline-variant hover:bg-surface-variant transition-colors\">\n          <div class=\"flex items-center gap-3\">\n            <span class=\"icon-[{{item.icon}}] text-xl text-primary\"></span>\n            <div class=\"flex-1\">\n              <h3 class=\"font-medium text-base\">{{ item.title }}</h3>\n              <p class=\"text-sm text-on-surface-variant\">{{ item.description }}</p>\n            </div>\n            <span class=\"icon-[iconoir--arrow-right] text-lg\"></span>\n          </div>\n        </div>\n      }\n    </div>\n  </div>\n\n  <router-outlet />\n</main>"
        },
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-5fc4c8f954bcfefd45ae671e646e51af92b7f11ce7eac279c13f85281f63d354b04e93665af9f97aef7d94d98bbd1cc0a77b29d0548493b58261ed6e1d20fd05",
            "file": "src/app/components/button/button.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-button",
            "styleUrls": [
                "./button.css"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "label",
                    "defaultValue": "'Button'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "size",
                    "defaultValue": "'medium'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "\"small\" | \"medium\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "\"light\" | \"dark\"",
                    "decorators": []
                },
                {
                    "name": "variant",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"primary\" | \"secondary\" | \"outline\"",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "clicked",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { Component, Input, Output, EventEmitter } from '@angular/core';\n\n@Component({\n  selector: 'app-button',\n  standalone: true,\n  imports: [CommonModule],\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.css'],\n})\nexport class ButtonComponent {\n  @Input()\n  variant: 'primary' | 'secondary' | 'outline' = 'primary';\n\n  @Input()\n  size: 'small' | 'medium' | 'large' = 'medium';\n\n  @Input()\n  theme: 'light' | 'dark' = 'light';\n\n  @Input()\n  label = 'Button';\n\n  @Output()\n  clicked = new EventEmitter<Event>();\n\n  get buttonClasses(): string {\n    const sizeClasses = {\n      small: 'btn-small',\n      medium: 'btn-medium',\n      large: 'btn-large',\n    };\n\n    const variantClasses = {\n      primary: 'btn-primary',\n      secondary: 'btn-secondary',\n      outline: 'btn-outline',\n    };\n\n    return `btn-base ${sizeClasses[this.size]} ${variantClasses[this.variant]}`;\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".btn-base {\n  @apply font-sans border-none cursor-pointer transition-all duration-200 rounded-sm font-medium transition-colors flex items-center justify-center gap-2;\n}\n\n.btn-base:focus-visible {\n  @apply outline-2 outline-offset-2 outline-primary;\n}\n\n.btn-base:disabled {\n  @apply bg-surfaceVariant text-onSurfaceVariant cursor-not-allowed opacity-60;\n}\n\n.btn-small {\n  @apply px-3 py-1.5 text-sm;\n}\n\n.btn-medium {\n  @apply px-4 py-2 text-base;\n}\n\n.btn-large {\n  @apply px-6 py-3 text-lg;\n}\n\n.btn-primary {\n  @apply bg-primary text-onPrimary;\n}\n\n.btn-primary:hover {\n  @apply bg-primaryContainer text-onPrimaryContainer;\n}\n\n.btn-secondary {\n  @apply bg-surfaceVariant text-onSurfaceVariant;\n}\n\n.btn-secondary:hover {\n  @apply bg-primary text-onPrimary;\n}\n\n.btn-outline {\n  @apply bg-transparent border border-outline text-onSurface;\n}\n\n.btn-outline:hover {\n  @apply bg-surfaceVariant;\n}\n",
                    "styleUrl": "./button.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "accessors": {
                "buttonClasses": {
                    "name": "buttonClasses",
                    "getSignature": {
                        "name": "buttonClasses",
                        "type": "string",
                        "returnType": "string",
                        "line": 27
                    }
                }
            },
            "templateData": "<button\n  type=\"button\"\n  (click)=\"clicked.emit($event)\"\n  [class]=\"buttonClasses\"\n  [attr.data-theme]=\"theme\"\n>\n  {{ label }}\n</button>"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-6d45cc53cb9575d30305eb575381b55d50701d053e6e7f1e5e43b1f0163f96f410de7b345aa8573a726a2feff7523860bc3d04becbb75c313aa9f1271f4ad6ff",
            "file": "src/app/components/header/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "templateUrl": [
                "./header.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "\"light\" | \"dark\"",
                    "decorators": []
                },
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "createAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "EventEmitter"
                },
                {
                    "name": "login",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "EventEmitter"
                },
                {
                    "name": "logout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "ButtonComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent } from '../button/button.component';\n\nexport interface User {\n  name: string;\n}\n\n@Component({\n  selector: 'app-header',\n  standalone: true,\n  imports: [CommonModule, ButtonComponent],\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.css'],\n})\nexport class HeaderComponent {\n  @Input() user: User | null = null;\n  @Input() theme: 'light' | 'dark' = 'light';\n  @Output() login = new EventEmitter<Event>();\n  @Output() logout = new EventEmitter<Event>();\n  @Output() createAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".storybook-header {\n  @apply bg-surface text-onSurface border-b border-outlineVariant font-sans;\n}\n\n.header-content {\n  @apply flex justify-between items-center px-6 py-4 max-w-7xl mx-auto;\n}\n\n.logo-section {\n  @apply flex items-center;\n}\n\n.logo-wrapper {\n  @apply flex items-center gap-3;\n}\n\n.logo-icon {\n  @apply rounded;\n}\n\n.logo-title {\n  @apply text-xl font-semibold text-onSurface;\n}\n\n.nav-section {\n  @apply flex items-center gap-4;\n}\n\n.user-section {\n  @apply flex items-center gap-3;\n}\n\n.auth-section {\n  @apply flex items-center gap-3;\n}\n\n.welcome-text {\n  @apply text-onSurfaceVariant text-sm;\n}\n\n.user-name {\n  @apply text-onSurface font-semibold;\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n  .header-content {\n    @apply px-4 py-3;\n  }\n\n  .welcome-text {\n    @apply hidden;\n  }\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<header \n  [attr.data-theme]=\"theme\" \n  class=\"storybook-header\"\n>\n  <div class=\"header-content\">\n    <div class=\"logo-section\">\n      <div class=\"logo-wrapper\">\n        <svg \n          width=\"32\" \n          height=\"32\" \n          viewBox=\"0 0 32 32\" \n          xmlns=\"http://www.w3.org/2000/svg\" \n          class=\"logo-icon\"\n        >\n          <rect width=\"32\" height=\"32\" fill=\"var(--color-primary)\" />\n          <rect x=\"8\" y=\"8\" width=\"16\" height=\"16\" fill=\"var(--color-onPrimary)\" />\n        </svg>\n        <h1 class=\"logo-title\">Metro UI</h1>\n      </div>\n    </div>\n\n    <div class=\"nav-section\">\n      <div *ngIf=\"user\" class=\"user-section\">\n        <span class=\"welcome-text\">\n          Welcome, <b class=\"user-name\">{{ user.name }}</b>!\n        </span>\n        <app-button\n          size=\"small\"\n          variant=\"outline\"\n          [theme]=\"theme\"\n          (clicked)=\"logout.emit($event)\"\n          label=\"Log out\"\n        ></app-button>\n      </div>\n      \n      <div *ngIf=\"!user\" class=\"auth-section\">\n        <app-button\n          size=\"small\"\n          variant=\"outline\"\n          [theme]=\"theme\"\n          (clicked)=\"login.emit($event)\"\n          label=\"Log in\"\n        ></app-button>\n        <app-button\n          size=\"small\"\n          variant=\"primary\"\n          [theme]=\"theme\"\n          (clicked)=\"createAccount.emit($event)\"\n          label=\"Sign up\"\n        ></app-button>\n      </div>\n    </div>\n  </div>\n</header>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-a101731312e409286ffe009ab5bb3624c26c26251d08151e37f6434a3586db7b0664dd85c59eab3c3c24c8420810be000f8fa97b030e252631dcf44eef24b0bf",
            "file": "src/app/components/page/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "templateUrl": [
                "./page.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "theme",
                    "defaultValue": "'light'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"light\" | \"dark\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "documentation",
                    "defaultValue": "[\n    {\n      title: 'Design Principles',\n      description: 'Learn the core principles of Metro UI design language',\n      icon: '🎨',\n    },\n    {\n      title: 'Component Library',\n      description: 'Browse our collection of Metro-styled components',\n      icon: '🧩',\n    },\n    {\n      title: 'Typography Scale',\n      description: 'Understand the typographic hierarchy and spacing',\n      icon: '🔤',\n    },\n    {\n      title: 'Motion Guidelines',\n      description: 'Implement meaningful animations and transitions',\n      icon: '⚡',\n    },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 24
                },
                {
                    "name": "metroTiles",
                    "defaultValue": "[\n    { label: 'Mail', color: 'var(--color-primary)', icon: '✉️' },\n    { label: 'Calendar', color: 'var(--color-error)', icon: '📅' },\n    { label: 'Photos', color: 'var(--color-primaryContainer)', icon: '🖼️' },\n    { label: 'Store', color: 'var(--color-surfaceVariant)', icon: '🛍️' },\n  ]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 17
                },
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "indexKey": "",
                    "optional": false,
                    "description": "",
                    "line": 15
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 53,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 50,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 47,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "CommonModule",
                    "type": "module"
                },
                {
                    "name": "HeaderComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { HeaderComponent } from '../header/header.component';\nimport type { User } from '../header/header.component';\n\n@Component({\n  selector: 'app-page',\n  standalone: true,\n  imports: [CommonModule, HeaderComponent],\n  templateUrl: './page.component.html',\n  styleUrls: ['./page.css'],\n})\nexport class PageComponent {\n  @Input() theme: 'light' | 'dark' = 'light';\n  user: User | null = null;\n\n  metroTiles = [\n    { label: 'Mail', color: 'var(--color-primary)', icon: '✉️' },\n    { label: 'Calendar', color: 'var(--color-error)', icon: '📅' },\n    { label: 'Photos', color: 'var(--color-primaryContainer)', icon: '🖼️' },\n    { label: 'Store', color: 'var(--color-surfaceVariant)', icon: '🛍️' },\n  ];\n\n  documentation = [\n    {\n      title: 'Design Principles',\n      description: 'Learn the core principles of Metro UI design language',\n      icon: '🎨',\n    },\n    {\n      title: 'Component Library',\n      description: 'Browse our collection of Metro-styled components',\n      icon: '🧩',\n    },\n    {\n      title: 'Typography Scale',\n      description: 'Understand the typographic hierarchy and spacing',\n      icon: '🔤',\n    },\n    {\n      title: 'Motion Guidelines',\n      description: 'Implement meaningful animations and transitions',\n      icon: '⚡',\n    },\n  ];\n\n  doLogout() {\n    this.user = null;\n  }\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "/* Componente Page - Solo Tailwind */\n.storybook-page {\n  @apply bg-background text-onBackground font-sans min-h-screen;\n}\n\n.page-content {\n  @apply max-w-7xl mx-auto px-6 py-8;\n}\n\n.hero-section {\n  @apply text-center mb-12 py-8;\n}\n\n.hero-title {\n  @apply text-4xl font-light text-onBackground tracking-tight mb-4;\n}\n\n.hero-subtitle {\n  @apply text-lg text-onSurfaceVariant font-normal;\n}\n\n.content-grid {\n  @apply grid gap-12 mb-12;\n}\n\n.section-title {\n  @apply text-2xl font-semibold text-onBackground mb-6;\n}\n\n.tiles-grid {\n  @apply grid grid-cols-2 sm:grid-cols-4 gap-4;\n}\n\n.metro-tile-story {\n  @apply aspect-square rounded flex flex-col items-center justify-center text-white font-medium transition-transform duration-200 cursor-pointer;\n}\n\n.metro-tile-story:hover {\n  @apply scale-105;\n}\n\n.tile-icon {\n  @apply text-2xl mb-2;\n}\n\n.tile-label {\n  @apply text-sm;\n}\n\n.docs-list {\n  @apply flex flex-col gap-4;\n}\n\n.doc-item {\n  @apply flex items-center gap-4 p-4 bg-surface border border-outlineVariant rounded cursor-pointer transition-all duration-200;\n}\n\n.doc-item:hover {\n  @apply bg-surfaceVariant border-primary;\n}\n\n.doc-icon {\n  @apply text-2xl flex-shrink-0;\n}\n\n.doc-content {\n  @apply flex-1;\n}\n\n.doc-title {\n  @apply text-base font-semibold text-onSurface mb-1;\n}\n\n.doc-description {\n  @apply text-sm text-onSurfaceVariant;\n}\n\n.doc-arrow {\n  @apply text-primary text-xl font-light;\n}\n\n.tips-section {\n  @apply border-t border-outlineVariant pt-8;\n}\n\n.tip-wrapper {\n  @apply flex items-start gap-4 p-6 bg-primaryContainer text-onPrimaryContainer rounded;\n}\n\n.tip-badge {\n  @apply bg-primary text-onPrimary px-3 py-1 rounded-full text-xs font-semibold flex-shrink-0 mt-0.5;\n}\n\n.tip-text {\n  @apply text-sm leading-relaxed;\n}\n\n/* Responsive */\n@media (max-width: 768px) {\n  .page-content {\n    @apply px-4 py-6;\n  }\n\n  .hero-title {\n    @apply text-3xl;\n  }\n\n  .tiles-grid {\n    @apply grid-cols-2 gap-3;\n  }\n\n  .content-grid {\n    @apply gap-8;\n  }\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": "",
            "extends": [],
            "templateData": "<article \n  [attr.data-theme]=\"theme\" \n  class=\"storybook-page\"\n>\n  <app-header\n    [user]=\"user\"\n    [theme]=\"theme\"\n    (logout)=\"doLogout()\"\n    (login)=\"doLogin()\"\n    (createAccount)=\"doCreateAccount()\"\n  ></app-header>\n  \n  <section class=\"page-content\">\n    <!-- Hero Section -->\n    <div class=\"hero-section\">\n      <h2 class=\"hero-title\">Metro UI Design System</h2>\n      <p class=\"hero-subtitle\">\n        Building modern interfaces with Windows Phone inspiration\n      </p>\n    </div>\n\n    <!-- Content Grid -->\n    <div class=\"content-grid\">\n      <!-- Tiles Section -->\n      <div class=\"tiles-section\">\n        <h3 class=\"section-title\">Application Tiles</h3>\n        <div class=\"tiles-grid\">\n          <div \n            *ngFor=\"let tile of metroTiles\" \n            class=\"metro-tile-story\"\n            [style.background]=\"tile.color\"\n          >\n            <span class=\"tile-icon\" [innerHTML]=\"tile.icon\"></span>\n            <span class=\"tile-label\">{{ tile.label }}</span>\n          </div>\n        </div>\n      </div>\n\n      <!-- Documentation Section -->\n      <div class=\"docs-section\">\n        <h3 class=\"section-title\">Getting Started</h3>\n        <div class=\"docs-list\">\n          <div class=\"doc-item\" *ngFor=\"let doc of documentation\">\n            <span class=\"doc-icon\" [innerHTML]=\"doc.icon\"></span>\n            <div class=\"doc-content\">\n              <h4 class=\"doc-title\">{{ doc.title }}</h4>\n              <p class=\"doc-description\">{{ doc.description }}</p>\n            </div>\n            <span class=\"doc-arrow\">→</span>\n          </div>\n        </div>\n      </div>\n    </div>\n\n    <!-- Tips Section -->\n    <div class=\"tips-section\">\n      <div class=\"tip-wrapper\">\n        <span class=\"tip-badge\">Tip</span>\n        <p class=\"tip-text\">\n          Metro UI emphasizes clean typography, meaningful motion, and content-first design.\n          Use ample whitespace and focus on readability.\n        </p>\n      </div>\n    </div>\n  </section>\n</article>"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes)\n  ]\n}"
            },
            {
                "name": "outputDir",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/lib/material-theme/cli.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'src/styles'"
            },
            {
                "name": "root",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/lib/material-theme/cli.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "process.cwd()"
            },
            {
                "name": "routes",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.routes.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Routes",
                "defaultValue": "[]"
            },
            {
                "name": "SCHEMES",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/lib/material-theme/theme.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type[]",
                "defaultValue": "[\n  { name: 'tonal-spot', variant: SchemeTonalSpot },\n  { name: 'neutral', variant: SchemeNeutral },\n  { name: 'vibrant', variant: SchemeVibrant },\n  { name: 'expressive', variant: SchemeExpressive },\n  { name: 'monochrome', variant: SchemeMonochrome },\n  { name: 'content', variant: SchemeContent },\n  { name: 'fidelity', variant: SchemeFidelity },\n  { name: 'fruit-salad', variant: SchemeFruitSalad },\n  { name: 'rainbow', variant: SchemeRainbow },\n]"
            },
            {
                "name": "SEED_COLOR",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/lib/material-theme/theme.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'#4b0082'"
            },
            {
                "name": "SELECTED_SCHEME",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/lib/material-theme/theme.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "string",
                "defaultValue": "'neutral'"
            },
            {
                "name": "THEME_CSS_VARS",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/lib/material-theme/theme-generator.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  'primary',\n  'onPrimary',\n  'primaryContainer',\n  'onPrimaryContainer',\n  'secondary',\n  'onSecondary',\n  'secondaryContainer',\n  'onSecondaryContainer',\n  'tertiary',\n  'onTertiary',\n  'tertiaryContainer',\n  'onTertiaryContainer',\n  'error',\n  'onError',\n  'errorContainer',\n  'onErrorContainer',\n  'background',\n  'onBackground',\n  'surface',\n  'surfaceDim',\n  'surfaceBright',\n  'surfaceContainerLowest',\n  'surfaceContainerLow',\n  'surfaceContainer',\n  'surfaceContainerHigh',\n  'surfaceContainerHighest',\n  'onSurface',\n  'surfaceVariant',\n  'onSurfaceVariant',\n  'outline',\n  'outlineVariant',\n  'shadow',\n  'scrim',\n  'inverseSurface',\n  'inverseOnSurface',\n  'inversePrimary',\n]"
            }
        ],
        "functions": [
            {
                "name": "extractColors",
                "file": "src/lib/material-theme/theme-generator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "scheme",
                        "type": "DynamicScheme",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "Record<string, string>",
                "jsdoctags": [
                    {
                        "name": "scheme",
                        "type": "DynamicScheme",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "generateThemeFiles",
                "file": "src/lib/material-theme/theme-generator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "root",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "outputDir",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "void",
                "jsdoctags": [
                    {
                        "name": "root",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "outputDir",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            {
                "name": "getColorFromScheme",
                "file": "src/lib/material-theme/theme-generator.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [
                    {
                        "name": "prop",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "scheme",
                        "type": "DynamicScheme",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "returnType": "number",
                "jsdoctags": [
                    {
                        "name": "prop",
                        "type": "string",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "scheme",
                        "type": "DynamicScheme",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            }
        ],
        "typealiases": [
            {
                "name": "SchemeConstructor",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "",
                "file": "src/lib/material-theme/theme.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({ eventCoalescing: true }),\n    provideRouter(routes)\n  ]\n}"
                }
            ],
            "src/lib/material-theme/cli.ts": [
                {
                    "name": "outputDir",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/lib/material-theme/cli.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'src/styles'"
                },
                {
                    "name": "root",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/lib/material-theme/cli.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "process.cwd()"
                }
            ],
            "src/app/app.routes.ts": [
                {
                    "name": "routes",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.routes.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Routes",
                    "defaultValue": "[]"
                }
            ],
            "src/lib/material-theme/theme.config.ts": [
                {
                    "name": "SCHEMES",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/lib/material-theme/theme.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type[]",
                    "defaultValue": "[\n  { name: 'tonal-spot', variant: SchemeTonalSpot },\n  { name: 'neutral', variant: SchemeNeutral },\n  { name: 'vibrant', variant: SchemeVibrant },\n  { name: 'expressive', variant: SchemeExpressive },\n  { name: 'monochrome', variant: SchemeMonochrome },\n  { name: 'content', variant: SchemeContent },\n  { name: 'fidelity', variant: SchemeFidelity },\n  { name: 'fruit-salad', variant: SchemeFruitSalad },\n  { name: 'rainbow', variant: SchemeRainbow },\n]"
                },
                {
                    "name": "SEED_COLOR",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/lib/material-theme/theme.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'#4b0082'"
                },
                {
                    "name": "SELECTED_SCHEME",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/lib/material-theme/theme.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "defaultValue": "'neutral'"
                }
            ],
            "src/lib/material-theme/theme-generator.ts": [
                {
                    "name": "THEME_CSS_VARS",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/lib/material-theme/theme-generator.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  'primary',\n  'onPrimary',\n  'primaryContainer',\n  'onPrimaryContainer',\n  'secondary',\n  'onSecondary',\n  'secondaryContainer',\n  'onSecondaryContainer',\n  'tertiary',\n  'onTertiary',\n  'tertiaryContainer',\n  'onTertiaryContainer',\n  'error',\n  'onError',\n  'errorContainer',\n  'onErrorContainer',\n  'background',\n  'onBackground',\n  'surface',\n  'surfaceDim',\n  'surfaceBright',\n  'surfaceContainerLowest',\n  'surfaceContainerLow',\n  'surfaceContainer',\n  'surfaceContainerHigh',\n  'surfaceContainerHighest',\n  'onSurface',\n  'surfaceVariant',\n  'onSurfaceVariant',\n  'outline',\n  'outlineVariant',\n  'shadow',\n  'scrim',\n  'inverseSurface',\n  'inverseOnSurface',\n  'inversePrimary',\n]"
                }
            ]
        },
        "groupedFunctions": {
            "src/lib/material-theme/theme-generator.ts": [
                {
                    "name": "extractColors",
                    "file": "src/lib/material-theme/theme-generator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "scheme",
                            "type": "DynamicScheme",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "Record<string, string>",
                    "jsdoctags": [
                        {
                            "name": "scheme",
                            "type": "DynamicScheme",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "generateThemeFiles",
                    "file": "src/lib/material-theme/theme-generator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "root",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "outputDir",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "void",
                    "jsdoctags": [
                        {
                            "name": "root",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "outputDir",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "getColorFromScheme",
                    "file": "src/lib/material-theme/theme-generator.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [
                        {
                            "name": "prop",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        },
                        {
                            "name": "scheme",
                            "type": "DynamicScheme",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "returnType": "number",
                    "jsdoctags": [
                        {
                            "name": "prop",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        },
                        {
                            "name": "scheme",
                            "type": "DynamicScheme",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/lib/material-theme/theme.config.ts": [
                {
                    "name": "SchemeConstructor",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "",
                    "file": "src/lib/material-theme/theme.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": {
        "name": "<root>",
        "kind": "module",
        "children": []
    },
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.routes.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "routes",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/app.ts",
                "type": "component",
                "linktype": "component",
                "name": "App",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/6",
                "status": "low"
            },
            {
                "filePath": "src/app/components/header/header.component.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/components/page/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/8",
                "status": "low"
            },
            {
                "filePath": "src/lib/material-theme/cli.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "outputDir",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/material-theme/cli.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "root",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/material-theme/theme-generator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "extractColors",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/material-theme/theme-generator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "generateThemeFiles",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/material-theme/theme-generator.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "getColorFromScheme",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/material-theme/theme-generator.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "THEME_CSS_VARS",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/material-theme/theme.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SCHEMES",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/material-theme/theme.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SEED_COLOR",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/material-theme/theme.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SELECTED_SCHEME",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/lib/material-theme/theme.config.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "SchemeConstructor",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/stories/user.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            }
        ]
    }
}